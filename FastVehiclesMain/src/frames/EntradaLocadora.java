/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import dao.InstanceDao;
import dao.LocadoraDao;
import design.DesignApp;
import idioma.IdiomaApp;
import java.awt.Color;
import static java.awt.Frame.NORMAL;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.UIManager;
import modelos.Locadora;

/**
 *
 * @author Isaac
 */
public class EntradaLocadora extends javax.swing.JFrame
    implements WindowListener, FrameTheme, FrameMenuTheme,
    FrameLang, FrameMenuLang {
    
    private LocadoraDao locadoraDao = InstanceDao.LOCADORA_DAO;
    private Locadora locadoraAtual; //locadora add na classe anterior pelo addLocadora - locator added in the ancient class
    private LocadoraAdmCliente admCliente;
    private LocadoraAdmVeiculos admVeiculos;
    private LocadoraEditLoc admLocadora;
    private LocadoraLocacoes admLocacoes;
    
   // private Locadora locadoraAtual = locadoraDao.get(1L) ; //to test
    /**
     * Creates new form EntradaLocadora
     */
    public EntradaLocadora() {
        initComponents();
        //extraConfigs(); //chamo dentro do addLocadora pq preciso dela inicializada - it is called inside addLocadora cause I need locadoraAtual initialized
        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnGeral = new javax.swing.JPanel();
        pnConteudo = new javax.swing.JPanel();
        lblCumprimento = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnGerenciar = new javax.swing.JMenu();
        mniClientes = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniVeiculos = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniMinhaLoc = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mniLocacoes = new javax.swing.JMenuItem();
        mnOpcoes = new javax.swing.JMenu();
        mnLang = new javax.swing.JMenu();
        mniPortugues = new javax.swing.JCheckBoxMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniIngles = new javax.swing.JCheckBoxMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        mnTema = new javax.swing.JMenu();
        mniLight = new javax.swing.JCheckBoxMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        mniDark = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FastVehicles | Entrada Locadora");

        lblCumprimento.setText("Bem vindo, administrador!");

        lblDescricao.setText("Aqui você pode administrar seus veículos, clientes e seus dados");

        javax.swing.GroupLayout pnConteudoLayout = new javax.swing.GroupLayout(pnConteudo);
        pnConteudo.setLayout(pnConteudoLayout);
        pnConteudoLayout.setHorizontalGroup(
            pnConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConteudoLayout.createSequentialGroup()
                .addGroup(pnConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnConteudoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblDescricao))
                    .addGroup(pnConteudoLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(lblCumprimento)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        pnConteudoLayout.setVerticalGroup(
            pnConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConteudoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lblCumprimento)
                .addGap(84, 84, 84)
                .addComponent(lblDescricao)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnGeralLayout = new javax.swing.GroupLayout(pnGeral);
        pnGeral.setLayout(pnGeralLayout);
        pnGeralLayout.setHorizontalGroup(
            pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGeralLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pnConteudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        pnGeralLayout.setVerticalGroup(
            pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnConteudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        mnGerenciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/manage.png"))); // NOI18N
        mnGerenciar.setText("Gerenciar");

        mniClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/client.png"))); // NOI18N
        mniClientes.setText("Clientes");
        mniClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClientesActionPerformed(evt);
            }
        });
        mnGerenciar.add(mniClientes);
        mnGerenciar.add(jSeparator2);

        mniVeiculos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vehicle.png"))); // NOI18N
        mniVeiculos.setText("Veiculos");
        mniVeiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniVeiculosActionPerformed(evt);
            }
        });
        mnGerenciar.add(mniVeiculos);
        mnGerenciar.add(jSeparator3);

        mniMinhaLoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/locator.png"))); // NOI18N
        mniMinhaLoc.setText("Minha Locadora");
        mniMinhaLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMinhaLocActionPerformed(evt);
            }
        });
        mnGerenciar.add(mniMinhaLoc);
        mnGerenciar.add(jSeparator4);

        mniLocacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/handshake.png"))); // NOI18N
        mniLocacoes.setText("Locações");
        mniLocacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLocacoesActionPerformed(evt);
            }
        });
        mnGerenciar.add(mniLocacoes);

        jMenuBar1.add(mnGerenciar);

        mnOpcoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        mnOpcoes.setText("Opções");
        mnOpcoes.setToolTipText("");

        mnLang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lang.png"))); // NOI18N
        mnLang.setText("Linguagem");

        mniPortugues.setSelected(true);
        mniPortugues.setText("Português");
        mniPortugues.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/brazil.png"))); // NOI18N
        mniPortugues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPortuguesActionPerformed(evt);
            }
        });
        mnLang.add(mniPortugues);
        mnLang.add(jSeparator1);

        mniIngles.setSelected(true);
        mniIngles.setText("Inglês");
        mniIngles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/usa.png"))); // NOI18N
        mniIngles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInglesActionPerformed(evt);
            }
        });
        mnLang.add(mniIngles);

        mnOpcoes.add(mnLang);
        mnOpcoes.add(jSeparator6);

        mnTema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/themes.png"))); // NOI18N
        mnTema.setText("Tema");

        mniLight.setSelected(true);
        mniLight.setText("Light");
        mniLight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sun.png"))); // NOI18N
        mniLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLightActionPerformed(evt);
            }
        });
        mnTema.add(mniLight);
        mnTema.add(jSeparator7);

        mniDark.setSelected(true);
        mniDark.setText("Dark");
        mniDark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/moon.png"))); // NOI18N
        mniDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDarkActionPerformed(evt);
            }
        });
        mnTema.add(mniDark);

        mnOpcoes.add(mnTema);

        jMenuBar1.add(mnOpcoes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClientesActionPerformed
        if(admCliente == null) { //se a tela nao foi iniciada - if screen was not init
            admCliente = new LocadoraAdmCliente();
            admCliente.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                   if(e.getComponent().equals(admCliente)) { 
                       admCliente = null;  //coloca null para poder reiniciar a tela novamente - assign null to init again 
                   }
                }
            });

            admCliente.addLocadora(locadoraAtual); //adiciona locadora para operacoes necessarias - add locator to do all ops
            admCliente.setVisible(true);

        }else if(admCliente.getExtendedState() != NORMAL) {
            admCliente.setExtendedState(NORMAL);
        }else {
            admCliente.requestFocus();
        }
    }//GEN-LAST:event_mniClientesActionPerformed

    private void mniVeiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniVeiculosActionPerformed
        if(admVeiculos == null) { //se a tela nao foi iniciada - if screen was not init
            admVeiculos = new LocadoraAdmVeiculos();
            admVeiculos.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                   if(e.getComponent().equals(admVeiculos)) { 
                       admVeiculos = null;  //coloca null para poder reiniciar a tela novamente - assign null to init again 
                   }
                }
            });

            admVeiculos.addLocadora(locadoraAtual); //adiciona locadora para operacoes necessarias - add locator to do all ops
            admVeiculos.setVisible(true);

        }else if(admVeiculos.getExtendedState() != NORMAL) {
            admVeiculos.setExtendedState(NORMAL);
        }else {
            admVeiculos.requestFocus();
        }
    }//GEN-LAST:event_mniVeiculosActionPerformed

    private void mniMinhaLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMinhaLocActionPerformed
        if(admLocadora == null) { //se a tela nao foi iniciada - if screen was not init
            admLocadora = new LocadoraEditLoc();
            admLocadora.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                   if(e.getComponent().equals(admLocadora)) { 
                       admLocadora = null;  //coloca null para poder reiniciar a tela novamente - assign null to init again 
                   }
                }
            });

            admLocadora.addLocadora(locadoraAtual); //adiciona locadora para operacoes necessarias - add locator to do all ops
            admLocadora.setVisible(true);

        }else if(admLocadora.getExtendedState() != NORMAL) {
            admLocadora.setExtendedState(NORMAL);
        }else {
            admLocadora.requestFocus();
        }
    }//GEN-LAST:event_mniMinhaLocActionPerformed

    private void mniLocacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLocacoesActionPerformed
        if(admLocacoes == null) { //se a tela nao foi iniciada - if screen was not init
            admLocacoes = new LocadoraLocacoes();
            admLocacoes.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                   if(e.getComponent().equals(admLocacoes)) { 
                       admLocacoes = null;  //coloca null para poder reiniciar a tela novamente - assign null to init again 
                   }
                }
            });

            admLocacoes.addLocadora(locadoraAtual); //adiciona locadora para operacoes necessarias - add locator to do all ops
            admLocacoes.setVisible(true);

        }else if(admLocacoes.getExtendedState() != NORMAL) {
            admLocacoes.setExtendedState(NORMAL);
        }else {
            admLocacoes.requestFocus();
        }
    }//GEN-LAST:event_mniLocacoesActionPerformed

    private void mniLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLightActionPerformed

        //restaura frame para o padrao
        UIManager.put( "control", null);
        UIManager.put( "info", null);
        UIManager.put( "nimbusBase", null);
        UIManager.put( "nimbusAlertYellow", null);
        UIManager.put( "nimbusDisabledText", null);
        UIManager.put( "nimbusFocus", null);
        UIManager.put( "nimbusGreen", null);
        UIManager.put( "nimbusInfoBlue", null);
        UIManager.put( "nimbusLightBackground", null);
        UIManager.put( "nimbusOrange", null);
        UIManager.put( "nimbusRed", null);
        UIManager.put( "nimbusSelectedText", null);
        UIManager.put( "nimbusSelectionBackground", null);
        UIManager.put( "text", null);

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }

            }
            
            //toogle tema
            DesignApp.temaAtual = "light";
            
            //toogle menu
            mniLight.setSelected(true);
            mniDark.setSelected(false);

            DesignApp.FIELD_FONT_COLOR = Color.BLACK;
            DesignApp.FIELD_FONT_TIP_COLOR = Color.GRAY;
            InstanceFrame.updateAllFrames(); //atualiza os frames

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_mniLightActionPerformed

    private void mniDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDarkActionPerformed

        //coloca padroes para o dark mode
        UIManager.put( "control", new Color( 128, 128, 128) );
        UIManager.put( "info", new Color(128,128,128) );
        UIManager.put( "nimbusBase", new Color( 18, 30, 49) );
        UIManager.put( "nimbusAlertYellow", new Color( 248, 187, 0) );
        UIManager.put( "nimbusDisabledText", new Color( 128, 128, 128) );
        UIManager.put( "nimbusFocus", new Color(115,164,209) );
        UIManager.put( "nimbusGreen", new Color(176,179,50) );
        UIManager.put( "nimbusInfoBlue", new Color( 66, 139, 221) );
        UIManager.put( "nimbusLightBackground", new Color( 18, 30, 49) );
        UIManager.put( "nimbusOrange", new Color(191,98,4) );
        UIManager.put( "nimbusRed", new Color(169,46,34) );
        UIManager.put( "nimbusSelectedText", new Color( 255, 255, 255) );
        UIManager.put( "nimbusSelectionBackground", new Color( 104, 93, 156) );
        UIManager.put( "text", new Color( 230, 230, 230) );

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
            //toogle tema
            DesignApp.temaAtual = "dark";
            
            
            //toogle menu
            mniDark.setSelected(true);
            mniLight.setSelected(false);

            DesignApp.FIELD_FONT_COLOR = new Color(230, 230, 230);
            DesignApp.FIELD_FONT_TIP_COLOR = Color.GRAY;
            InstanceFrame.updateAllFrames(); //atualiza os frames

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_mniDarkActionPerformed

    private void mniPortuguesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPortuguesActionPerformed
        IdiomaApp.idiomaAtual = IdiomaApp.PORTUGUES; //coloca idioma como portugues no IdiomaApp

        //toggle lang
        mniPortugues.setSelected(true);//muda para portugues
        mniIngles.setSelected(false);

        InstanceFrame.updateAllFramesLang(); //atualiza os frames
    }//GEN-LAST:event_mniPortuguesActionPerformed

    private void mniInglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInglesActionPerformed
        IdiomaApp.idiomaAtual = IdiomaApp.INGLES; //coloca idioma como ingles no IdiomaApp

        //toggle lang
        mniIngles.setSelected(true);  //muda para ingles
        mniPortugues.setSelected(false);

        InstanceFrame.updateAllFramesLang(); //atualiza os frames
    }//GEN-LAST:event_mniInglesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntradaLocadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntradaLocadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntradaLocadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntradaLocadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntradaLocadora().setVisible(true);
            }
        });
    }
    
    public void extraConfigs() {
        setTitle("FastVehicles | Entrada Locadora - "
                + locadoraAtual.getNome().toUpperCase());
        //configs do frame - frames config
        setLocationRelativeTo(null);
        //coloca icone no jframe - insert icon on jframe
        URL url = getClass().getResource("/images/car-default-img.png");
        if(!(url == null)) {
            setIconImage(new ImageIcon(url).getImage());
        }
       
        
        //confgs dos elementos - elements configs
        lblCumprimento.setFont(DesignApp.fonteCumprimento);
        lblDescricao.setFont(DesignApp.fonteDescricao);
        
        //toogle menu
        if(DesignApp.temaAtual.equals("light")) { //coloca light como selecionado
            mniLight.setSelected(true);
            mniDark.setSelected(false);
        }else { //coloca dark
            mniLight.setSelected(false);
            mniDark.setSelected(true);
        }
        
        
        //toggle menu lang
        if(IdiomaApp.idiomaAtual == IdiomaApp.PORTUGUES) {
            mniPortugues.setSelected(true); //deixa mniLight checado
            mniIngles.setSelected(false);
        }else if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES){
            mniIngles.setSelected(true);
            mniPortugues.setSelected(false); //deixa mniLight checado
            updateLangComponents();
        }
        
    }

    public void addLocadora(Locadora loc) {
        locadoraAtual = loc;
        extraConfigs();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JLabel lblCumprimento;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JMenu mnGerenciar;
    private javax.swing.JMenu mnLang;
    private javax.swing.JMenu mnOpcoes;
    private javax.swing.JMenu mnTema;
    private javax.swing.JMenuItem mniClientes;
    private javax.swing.JCheckBoxMenuItem mniDark;
    private javax.swing.JCheckBoxMenuItem mniIngles;
    private javax.swing.JCheckBoxMenuItem mniLight;
    private javax.swing.JMenuItem mniLocacoes;
    private javax.swing.JMenuItem mniMinhaLoc;
    private javax.swing.JCheckBoxMenuItem mniPortugues;
    private javax.swing.JMenuItem mniVeiculos;
    private javax.swing.JPanel pnConteudo;
    private javax.swing.JPanel pnGeral;
    // End of variables declaration//GEN-END:variables
    
    //window listener
    @Override
    public void windowOpened(WindowEvent e) {
        InstanceFrame.addFrame(this); //adiciona frame na lista de frames abertos
    }

    @Override
    public void windowClosing(WindowEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosed(WindowEvent e) {
        InstanceFrame.removeFrame(this); //remove frame
    }

    @Override
    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void resetaListenerCampos() {
        //faz nada (facilitar)
    }

    @Override
    public JCheckBoxMenuItem getMniDark() {
        return mniDark;
    }

    @Override
    public JCheckBoxMenuItem getMniLight() {
        return mniLight;
    }

    @Override
    public JCheckBoxMenuItem getMniIngles() {
        return mniIngles;
    }

    @Override
    public JCheckBoxMenuItem getMniPortugues() {
        return mniPortugues;
    }


    @Override
    public void updateLangComponents() {
        
        if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES) { //se idioma eh ingles
            setTitle("FastVehicles | Locator Entrance - "
                + locadoraAtual.getNome().toUpperCase());
            
            mnOpcoes.setText("Settings");
            mnLang.setText("Language");
            mniPortugues.setText("Portuguese");
            mniIngles.setText("English");
            mnTema.setText("Theme");
            mnGerenciar.setText("Manage");
            mniClientes.setText("Clients");
            mniVeiculos.setText("Vehicles");
            mniMinhaLoc.setText("My Locator");
            mniLocacoes.setText("Rents");
            lblCumprimento.setText("Welcome, Admin");
            lblDescricao.setText("On this window, you can "
                + "manage all your vehicles, clients and data");
            
	}else if(IdiomaApp.idiomaAtual == IdiomaApp.PORTUGUES){ //se for portugues
            setTitle("FastVehicles | Entrada Locadora - "
                + locadoraAtual.getNome().toUpperCase());
            mnOpcoes.setText("Opções");
            mnLang.setText("Linguagem");
            mniPortugues.setText("Português");
            mniIngles.setText("Inglês");
            mnTema.setText("Tema");
            mnGerenciar.setText("Gerenciar");
            mniClientes.setText("Clientes");
            mniVeiculos.setText("Veículos");
            mniMinhaLoc.setText("Minha Locadora");
            mniLocacoes.setText("Locações");
            
            lblCumprimento.setText("Bem vindo, administrador!");
            lblDescricao.setText("Aqui você pode administrar seus"
                + " veículos, clientes e seus dados");
            
	}
   }
    
    
}
