/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import dao.CartaoDao;
import dao.InstanceDao;
import dao.LocadoraDao;
import design.DesignApp;
import idioma.IdiomaApp;
import static java.awt.Frame.NORMAL;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import modelos.Cartao;
import modelos.Cliente;

/**
 *
 * @author Isaac
 */
public class ClienteCartoes extends javax.swing.JFrame 
    implements FrameTheme, WindowListener, FrameLang {
    
    private LocadoraDao locadoraDao = InstanceDao.LOCADORA_DAO;
    private CartaoDao cartaoDao = InstanceDao.CARTAO_DAO;
    private Cliente clienteAtual;
    private DefaultTableModel tblModel;
    private DefaultTableColumnModel tblColumnModel;
    private CadastroCartao cadCartao;
    
    
    /**
     * Creates new form ClienteCartoes
     */
    public ClienteCartoes() {
        initComponents();
//        Locadora locadoraAtual = locadoraDao.get(1L); // to test
//        //addLocadora(locadoraAtual);
//        addCliente(locadoraAtual.getClientes().get(0));
        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnGeral = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCartao = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        btnCad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FastVehicles | Cartões");

        lblTitulo.setText("Cartões");

        tblCartao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCartao);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Deletar cartão, 1 por vez");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/signup.png"))); // NOI18N
        btnCad.setText("Cadastrar");
        btnCad.setToolTipText("Cadastrar cartão");
        btnCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGeralLayout = new javax.swing.GroupLayout(pnGeral);
        pnGeral.setLayout(pnGeralLayout);
        pnGeralLayout.setHorizontalGroup(
            pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGeralLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnGeralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnGeralLayout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(333, 333, 333))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnGeralLayout.createSequentialGroup()
                        .addComponent(btnCad)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir))))
        );
        pnGeralLayout.setVerticalGroup(
            pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGeralLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnCad))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int row = tblCartao.getSelectedRow();
        if(row != -1) {
            //int rowCountWhenSel = tblModelCarro.getRowCount(); //para resolver um problema mais tarde - to solve a problem late
            Long cartaoId = (Long)(tblModel.getValueAt(row, 0)); //pega id - get id
            tblModel.removeRow(row); //remove linha selecionada - remove selected row
            
            for(Cartao cartao: clienteAtual.getCartoes()) {
                if(cartaoId == cartao.getId()) {
                    cartaoDao.delete(cartao); //deleta carro no bd - delete car on db
                    break; //fecha loop
                }
            }
            
            updateTbl(); //atualiza tabela e lista

        }else { //se a linha nao esta selecionada - if line is not selected
            JOptionPane.showMessageDialog(this, "Linha não selecionada",
                "Sem Seleção!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadActionPerformed
        if(cadCartao == null) { //se a tela nao foi iniciada - if screen was not init
            cadCartao = new CadastroCartao();
            cadCartao.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                   if(e.getComponent().equals(cadCartao)) { 
                       cadCartao = null;  //coloca null para poder reiniciar a tela novamente - assign null to init again 
                   }
                }
            });

//            cadCartao.addLocadora(locadoraDao.get(
//              (Long) tblLocadora.getValueAt(row, 0))); // pega e adiciona locadora para operacoes necessarias - get and add locator to do all ops
            cadCartao.addClienteCartoes(this);
            cadCartao.addCliente(clienteAtual);
            cadCartao.setVisible(true);

        }else if(cadCartao.getExtendedState() != NORMAL) {
            cadCartao.setExtendedState(NORMAL);
        }else {
            cadCartao.requestFocus();
        }
    }//GEN-LAST:event_btnCadActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteCartoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteCartoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteCartoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteCartoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteCartoes().setVisible(true);
            }
        });
    }

    
    public void extraConfigs() {
        this.setTitle("FastVehicles | Cartões - " + clienteAtual.getNome());
        //configs do frame - frames config
        setLocationRelativeTo(null);
        //coloca icone no jframe - insert icon on jframe
        URL url = getClass().getResource("/images/car-default-img.png");
        if(!(url == null)) {
            setIconImage(new ImageIcon(url).getImage());
        }

        //configuracoes gerais - general configs
        lblTitulo.setFont(DesignApp.fonteTitulo);
        
        //configura table - setup table    
        tblModel = new DefaultTableModel(new String[]{"Id", "Numero", 
            "Banco", "Validade", "Cvc", "Bandeira"}, 0) {
                
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tblCartao.setModel(tblModel);
        tblCartao.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        tblColumnModel = ((DefaultTableColumnModel) tblCartao.getColumnModel());
        tblColumnModel.getColumn(0).setPreferredWidth(30);
        tblColumnModel.getColumn(1).setPreferredWidth(150);
        tblColumnModel.getColumn(2).setPreferredWidth(90);
        tblColumnModel.getColumn(3).setPreferredWidth(150);
        tblColumnModel.getColumn(4).setPreferredWidth(100);
        
        //add locadoras na tabela - add locators to table
        for(Cartao cartao: cartaoDao.getCardsByCliente(clienteAtual)) {
            tblModel.addRow(new Object[] {cartao.getId(),    
            cartao.getNumero(), cartao.getBanco(), cartao.getValidade(),
            cartao.getCvc(), cartao.getBandeira()});
        }
        
        //update lang
        if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES) {
            updateLangComponents();
        }
        
    }
    
    public void addCliente(Cliente c) {
        this.clienteAtual = c;
        extraConfigs(); 
    }
    
    public void updateTbl() { //atualiza tbl de cartoes
        tblModel.setRowCount(0); //zera tabela
        clienteAtual.setCartoes(cartaoDao.getCardsByCliente(clienteAtual)); //atualiza lista de cartoes do cliente - update card list from cliente
        //add carros na tabela - add cars to table 
        for(Cartao cartao: clienteAtual.getCartoes()) { //add cartoes na tabela - add cards in the table
            tblModel.addRow(new Object[] {cartao.getId(),    
                cartao.getNumero(), cartao.getBanco(), cartao.getValidade(),
                cartao.getCvc(), cartao.getBandeira()});
        }
    }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCad;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnGeral;
    private javax.swing.JTable tblCartao;
    // End of variables declaration//GEN-END:variables

    @Override
    public void resetaListenerCampos() {
        //faz nada ( para facilitar )
    }
    
     //window listener
    @Override
    public void windowOpened(WindowEvent e) {
        InstanceFrame.addFrame(this); //adiciona frame na lista de frames abertos
    }

    @Override
    public void windowClosing(WindowEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosed(WindowEvent e) {
        InstanceFrame.removeFrame(this); //remove frame
    }

    @Override
    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    //frame lang method
    
    @Override
    public void updateLangComponents() {
        if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES) { //se idioma eh ingles
            setTitle("FastVehicles | Cards Client - " + clienteAtual.getNome());
            lblTitulo.setText("Cards");
            btnCad.setText("Add");
            btnExcluir.setText("Delete");
            tblColumnModel.getColumn(1).setHeaderValue("Number");
            tblColumnModel.getColumn(2).setHeaderValue("Bank");
            tblColumnModel.getColumn(3).setHeaderValue("Expiration");
            tblColumnModel.getColumn(5).setHeaderValue("Flag");
            tblCartao.getTableHeader().resizeAndRepaint();
            
            btnCad.setToolTipText("Register a card");
            btnExcluir.setToolTipText("Delete card, 1 per time");
            
	}else if(IdiomaApp.idiomaAtual == IdiomaApp.PORTUGUES) { //se for portugues
            setTitle("FastVehicles | Cartões Cliente - " + clienteAtual.getNome());
            lblTitulo.setText("Cartões");
            btnCad.setText("Cadastrar");
            btnExcluir.setText("Excluir");

            tblColumnModel.getColumn(1).setHeaderValue("Número");
            tblColumnModel.getColumn(2).setHeaderValue("Banco");
            tblColumnModel.getColumn(3).setHeaderValue("Validade");
            tblColumnModel.getColumn(5).setHeaderValue("Bandeira");
            tblCartao.getTableHeader().resizeAndRepaint();
            
            btnCad.setToolTipText("Cadastrar cartão");
            btnExcluir.setToolTipText("Deletar cartão, 1 por vez");
	}   
    
    }
}
