/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import dao.CarroDao;
import dao.InstanceDao;
import dao.LocadoraDao;
import dao.MotoDao;
import design.DesignApp;
import idioma.IdiomaApp;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.net.URL;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.SpinnerNumberModel;
import modelos.Carro;
import modelos.Locadora;

/**
 *
 * @author Isaac
 */
public class CarroDados extends javax.swing.JFrame 
    implements FrameTheme, WindowListener, FrameLang {
    
    private LocadoraDao locadoraDao = InstanceDao.LOCADORA_DAO;
    private CarroDao carroDao = InstanceDao.CARRO_DAO;
    private MotoDao motoDao = InstanceDao.MOTO_DAO;
    private Locadora locadoraAtual; //locadora add na classe anterior pelo addLocadora - locator added in the ancient class
   // private Locadora locadoraAtual = locadoraDao.get(1L) ; //to test
    private LocadoraAdmVeiculos locadoraAdmVeiculos;
    private Carro carroAtual;
    private SpinnerNumberModel anoSpModel;
    private SpinnerNumberModel kmSpModel;
    private SpinnerNumberModel cavalosSpModel;
    private SpinnerNumberModel portasSpModel;
    private SpinnerNumberModel caucaoSpModel;
    private SpinnerNumberModel valorDiarioSpModel;
    /**
     * Creates new form CarroDados
     */
    public CarroDados() {
        initComponents();
//        locadoraAtual = locadoraDao.get(1L);
//        for(Veiculo v: locadoraAtual.getVeiculos()) { //poe carro no carro atual //to test
//            if(v instanceof Carro) {
//                carroAtual = (Carro)v; //pega 1o carro
//                break;
//            }
//        }
//        extraConfigs();
        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnCampos = new javax.swing.JPanel();
        txtId = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        lblCor = new javax.swing.JLabel();
        lblCombustivel = new javax.swing.JLabel();
        lblAno = new javax.swing.JLabel();
        lblKm = new javax.swing.JLabel();
        lblPlaca = new javax.swing.JLabel();
        lblCaucao = new javax.swing.JLabel();
        lblValorDiario = new javax.swing.JLabel();
        lblMotor = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JTextField();
        txtCombustivel = new javax.swing.JTextField();
        txtMotor = new javax.swing.JTextField();
        txtCor = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        pnCarro = new javax.swing.JPanel();
        lblCavalos = new javax.swing.JLabel();
        spCavalos = new javax.swing.JSpinner();
        lblPortas = new javax.swing.JLabel();
        spPortas = new javax.swing.JSpinner();
        spAno = new javax.swing.JSpinner();
        spValorDiario = new javax.swing.JSpinner();
        spKm = new javax.swing.JSpinner();
        lblKmDesc = new javax.swing.JLabel();
        spCaucao = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FastVehicles | Dados do carro ");

        txtId.setToolTipText("Id do veículo");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        lblId.setText("Id");

        lblTipo.setText("Tipo");
        lblTipo.setToolTipText("");

        lblMarca.setText("Marca");

        lblModelo.setText("Modelo");

        lblCor.setText("Cor");

        lblCombustivel.setText("Combustível");

        lblAno.setText("Ano");

        lblKm.setText("Quilometragem");

        lblPlaca.setText("Placa");

        lblCaucao.setText("Caução R$");

        lblValorDiario.setText("Valor Diário R$");

        lblMotor.setText("Motor");

        txtTipo.setToolTipText("Tipo do veículo");
        txtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoActionPerformed(evt);
            }
        });

        txtMarca.setToolTipText("Marca do veículo");

        txtPlaca.setToolTipText("Placa do veículo");

        txtCombustivel.setToolTipText("Combustível do veículo");

        txtMotor.setToolTipText("Motor do veículo");

        txtCor.setToolTipText("Cor do veículo");

        txtModelo.setToolTipText("Modelo do veículo");

        lblCavalos.setText("Cavalos");

        spCavalos.setToolTipText("Cavalos do carro");

        lblPortas.setText("Portas");

        spPortas.setToolTipText("número de portas do carro");

        javax.swing.GroupLayout pnCarroLayout = new javax.swing.GroupLayout(pnCarro);
        pnCarro.setLayout(pnCarroLayout);
        pnCarroLayout.setHorizontalGroup(
            pnCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCarroLayout.createSequentialGroup()
                        .addComponent(lblCavalos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spCavalos, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnCarroLayout.createSequentialGroup()
                        .addComponent(lblPortas)
                        .addGap(18, 18, 18)
                        .addComponent(spPortas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        pnCarroLayout.setVerticalGroup(
            pnCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarroLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCavalos)
                    .addComponent(spCavalos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCarroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPortas)
                    .addComponent(spPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        spAno.setToolTipText("Ano do veículo");

        spValorDiario.setToolTipText("Valor Diário do veículo");

        spKm.setToolTipText("Quilometragem do veículo");

        lblKmDesc.setText("Km");

        spCaucao.setToolTipText("Caução do veículo");

        javax.swing.GroupLayout pnCamposLayout = new javax.swing.GroupLayout(pnCampos);
        pnCampos.setLayout(pnCamposLayout);
        pnCamposLayout.setHorizontalGroup(
            pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCamposLayout.createSequentialGroup()
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnCamposLayout.createSequentialGroup()
                            .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnCamposLayout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(lblId)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnCamposLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblCombustivel)
                                        .addComponent(lblAno))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(spAno, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(pnCamposLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnCamposLayout.createSequentialGroup()
                                            .addComponent(lblKm)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(spKm, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblKmDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnCamposLayout.createSequentialGroup()
                                            .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblValorDiario, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                                .addComponent(lblCaucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(spCaucao, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(spValorDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGap(0, 224, Short.MAX_VALUE))
                        .addGroup(pnCamposLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnCamposLayout.createSequentialGroup()
                                    .addComponent(lblPlaca)
                                    .addGap(30, 30, 30)
                                    .addComponent(txtPlaca))
                                .addGroup(pnCamposLayout.createSequentialGroup()
                                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblMarca)
                                        .addComponent(lblTipo)
                                        .addComponent(lblModelo)
                                        .addComponent(lblCor))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtModelo)
                                        .addGroup(pnCamposLayout.createSequentialGroup()
                                            .addComponent(txtCor, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE))
                                        .addComponent(txtMarca)
                                        .addComponent(txtTipo))))))
                    .addGroup(pnCamposLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnCarro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnCamposLayout.createSequentialGroup()
                                .addComponent(lblMotor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(19, 72, Short.MAX_VALUE))
        );
        pnCamposLayout.setVerticalGroup(
            pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCamposLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCor)
                    .addComponent(txtCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCombustivel)
                    .addComponent(txtCombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAno)
                    .addComponent(spAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKm)
                    .addComponent(spKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKmDesc))
                .addGap(9, 9, 9)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaca)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCaucao)
                    .addComponent(spCaucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorDiario)
                    .addComponent(spValorDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMotor)
                    .addComponent(txtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(pnCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarroDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarroDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarroDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarroDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarroDados().setVisible(true);
            }
        });
    }
    
    
    public void extraConfigs() {
          
        setTitle("FastVehicles | Dados do Carro - " 
            + carroAtual.getModelo().toUpperCase());
        //configs do frame - frames config
        setLocationRelativeTo(null);
        //coloca icone no jframe - insert icon on jframe
        URL url = getClass().getResource("/images/car-default-img.png");
        if(!(url == null)) {
            setIconImage(new ImageIcon(url).getImage());
        }
        
        //confgs dos elementos - elements config
        lblId.setFont(DesignApp.fonteGeral);
        lblTipo.setFont(DesignApp.fonteGeral);
        lblMarca.setFont(DesignApp.fonteGeral);
        lblModelo.setFont(DesignApp.fonteGeral);
        lblCor.setFont(DesignApp.fonteGeral);
        lblCombustivel.setFont(DesignApp.fonteGeral);
        lblAno.setFont(DesignApp.fonteGeral);
        lblKm.setFont(DesignApp.fonteGeral);
        lblKmDesc.setFont(DesignApp.fonteGeral);
        lblPlaca.setFont(DesignApp.fonteGeral);
        lblCaucao.setFont(DesignApp.fonteGeral);
        lblValorDiario.setFont(DesignApp.fonteGeral);
        lblMotor.setFont(DesignApp.fonteGeral);
        lblCavalos.setFont(DesignApp.fonteGeral);
        lblPortas.setFont(DesignApp.fonteGeral);
        txtId.setFont(DesignApp.fonteGeral);
        txtId.setEnabled(false);
        txtId.setText(String.valueOf(carroAtual.getId()));
        
        txtTipo.setFont(DesignApp.fonteGeral);
        txtMarca.setFont(DesignApp.fonteGeral);
        txtModelo.setFont(DesignApp.fonteGeral);
        txtCor.setFont(DesignApp.fonteGeral);
        txtCombustivel.setFont(DesignApp.fonteGeral);
        txtPlaca.setFont(DesignApp.fonteGeral);
        txtMotor.setFont(DesignApp.fonteGeral);
        spAno.setFont(DesignApp.fonteGeral);
        spKm.setFont(DesignApp.fonteGeral);
        spCaucao.setFont(DesignApp.fonteGeral);
        spValorDiario.setFont(DesignApp.fonteGeral);
        spCavalos.setFont(DesignApp.fonteGeral);
        spPortas.setFont(DesignApp.fonteGeral);
        
        //instanciating spinner models
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        anoSpModel = new SpinnerNumberModel(currentYear, 1980, currentYear, 1);
        kmSpModel = new SpinnerNumberModel(100, 0, 1000000000, 10); 
        cavalosSpModel = new SpinnerNumberModel(50, 1, 100000, 10); 
        portasSpModel = new SpinnerNumberModel(2, 1, 100, 1); 
        caucaoSpModel = new SpinnerNumberModel(200, 0, 10000000, 5);
        valorDiarioSpModel = new SpinnerNumberModel(50, 1, 10000000, 5);
        
        spAno.setModel(anoSpModel);
        spKm.setModel(kmSpModel);
        spCavalos.setModel(cavalosSpModel);
        spPortas.setModel(portasSpModel);
        spCaucao.setModel(caucaoSpModel);
        spValorDiario.setModel(valorDiarioSpModel);
        
        //desabilita todos os campos - disable all fields
        txtTipo.setEditable(false);
        txtMarca.setEditable(false);
        txtModelo.setEditable(false);
        txtCombustivel.setEditable(false);
        txtMotor.setEditable(false);
        txtCor.setEditable(false);
        txtPlaca.setEditable(false);
        anoSpModel.setMaximum(carroAtual.getAno());
        anoSpModel.setMinimum(carroAtual.getAno());
        kmSpModel.setMaximum(carroAtual.getQuilometragem());
        kmSpModel.setMinimum(carroAtual.getQuilometragem());
        caucaoSpModel.setMaximum(carroAtual.getCaucao());
        caucaoSpModel.setMinimum(carroAtual.getCaucao());
        valorDiarioSpModel.setMaximum(carroAtual.getValorDiario());
        valorDiarioSpModel.setMinimum(carroAtual.getValorDiario());
        cavalosSpModel.setMaximum(carroAtual.getCavalos());
        cavalosSpModel.setMinimum(carroAtual.getCavalos());
        portasSpModel.setMaximum(carroAtual.getPortas());
        portasSpModel.setMinimum(carroAtual.getPortas());

        //poe valores dentro dos campos - put values in the fields
        txtTipo.setText(carroAtual.getTipo());
        txtMarca.setText(carroAtual.getMarca());
        txtModelo.setText(carroAtual.getModelo());
        txtCor.setText(carroAtual.getCor());
        txtCombustivel.setText(carroAtual.getCombustivel());
        txtPlaca.setText(carroAtual.getPlaca());
        txtMotor.setText(carroAtual.getMotor());
        anoSpModel.setValue(carroAtual.getAno());
        kmSpModel.setValue(carroAtual.getQuilometragem());
        caucaoSpModel.setValue(carroAtual.getCaucao());
        valorDiarioSpModel.setValue(carroAtual.getValorDiario());
        cavalosSpModel.setValue(carroAtual.getCavalos());
        portasSpModel.setValue(carroAtual.getPortas());
        
          //update lang
        if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES) {
            updateLangComponents();
        }
    }
    
    public void addCarro(Carro c) {
        this.carroAtual = c;
        extraConfigs();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAno;
    private javax.swing.JLabel lblCaucao;
    private javax.swing.JLabel lblCavalos;
    private javax.swing.JLabel lblCombustivel;
    private javax.swing.JLabel lblCor;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblKm;
    private javax.swing.JLabel lblKmDesc;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblMotor;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblPortas;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblValorDiario;
    private javax.swing.JPanel pnCampos;
    private javax.swing.JPanel pnCarro;
    private javax.swing.JSpinner spAno;
    private javax.swing.JSpinner spCaucao;
    private javax.swing.JSpinner spCavalos;
    private javax.swing.JSpinner spKm;
    private javax.swing.JSpinner spPortas;
    private javax.swing.JSpinner spValorDiario;
    private javax.swing.JTextField txtCombustivel;
    private javax.swing.JTextField txtCor;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtMotor;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void resetaListenerCampos() {
        //faz nada ( apenas para facilitar )
    }
    
     //window listener
    @Override
    public void windowOpened(WindowEvent e) {
        InstanceFrame.addFrame(this); //adiciona frame na lista de frames abertos
    }

    @Override
    public void windowClosing(WindowEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosed(WindowEvent e) {
        InstanceFrame.removeFrame(this); //remove frame
    }

    @Override
    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
        //update lang method
    @Override
    public void updateLangComponents() {
        
        if(IdiomaApp.idiomaAtual == IdiomaApp.INGLES) { //se idioma eh ingles
	    setTitle("FastVehicles | Data Car - " 
                + carroAtual.getModelo().toUpperCase());

            lblTipo.setText("Type");
            lblModelo.setText("Model");
            lblCor.setText("Color");
            lblMarca.setText("Brand");
            lblPlaca.setText("Plate");
            lblCombustivel.setText("Fuel");
            lblAno.setText("Year");
            lblKm.setText("Mileage");
            lblCaucao.setText("Deposit");
            lblValorDiario.setText("Rent Day");
            lblMotor.setText("Engine");
            lblCavalos.setText("Horses");
            lblPortas.setText("Doors");
            
            //tips
            txtId.setToolTipText("Vehicle id");
            txtTipo.setToolTipText("Vehicle type");
            txtMarca.setToolTipText("Vehicle brand");
            txtModelo.setToolTipText("Vehicle model");
            txtCor.setToolTipText("Vehicle color");
            txtCombustivel.setToolTipText("Vehicle fuel");
            spAno.setToolTipText("Vehicle year");
            spKm.setToolTipText("Vehicle mileage");
            txtPlaca.setToolTipText("Vehicle plate");
            spCaucao.setToolTipText("Vehicle deposit");
            spValorDiario.setToolTipText("Vehicle rent day");
            txtMotor.setToolTipText("Vehicle engine");
            spCavalos.setToolTipText("Car horses");
            spPortas.setToolTipText("Car doors");
        
	}else if(IdiomaApp.idiomaAtual == IdiomaApp.PORTUGUES) { //se for portugues
            setTitle("FastVehicles | Dados Carro - " 
                + carroAtual.getModelo().toUpperCase());
            
            lblTipo.setText("Tipo");
            lblModelo.setText("Modelo");
            lblCor.setText("Cor");
            lblMarca.setText("Marca");
            lblPlaca.setText("Placa");
            lblCombustivel.setText("Combustível");
            lblAno.setText("Ano");
            lblKm.setText("Quilometragem");
            lblCaucao.setText("Caução");
            lblValorDiario.setText("Valor Diário");
            lblMotor.setText("Motor");
            lblCavalos.setText("Cavalos");
            lblPortas.setText("Portas");

                        //tips
            txtId.setToolTipText("Id do veículo");
            txtTipo.setToolTipText("Tipo do veículo");
            txtMarca.setToolTipText("Marca do veículo");
            txtModelo.setToolTipText("Modelo do veículo");
            txtCor.setToolTipText("Cor do veículo");
            txtCombustivel.setToolTipText("Combustível do veículo");
            spAno.setToolTipText("Ano do veículo");
            spKm.setToolTipText("Quilometragem do veículo");
            txtPlaca.setToolTipText("Placa do veículo");
            spCaucao.setToolTipText("Caução do veículo");
            spValorDiario.setToolTipText("Valor diário do veículo");
            txtMotor.setToolTipText("Motor do veículo");
            spCavalos.setToolTipText("Cavalos do carro");
            spPortas.setToolTipText("Portas do carro");

	}
   }
}
